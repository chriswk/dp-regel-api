openapi: 3.0.0
info:
  title: Dagpenger Regel API
  version: '1.0'
servers:
  - url: 'https://dp-regel-api.nais.adeo.no/v1'
    description: Produksjon (bruker ekte data)
  - url: 'https://dp-regel-api.nais.preprod.local/v1'
    description: Test (bruker test data)
tags:
  - name: Behov
  - name: Subsumsjon
security:
  - stsTokenAuth: []
  - stsOIDC:
      - openid
paths:
  /behov:
    post:
      tags:
        - Behov
      summary: Opprett nytt behov for dagpenger
      requestBody:
        description: Hva vi allerede vet om brukerens behov
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BehovRequest'
            examples:
              verneplikt:
                $ref: '#/components/examples/behovRequestMedVerneplikt'
              medBarn:
                $ref: '#/components/examples/behovRequestMedBarnOgInntekt'
      responses:
        '202':
          description: Nytt behov opprettet. Gir link til status for å følge fremgang på når behovet innfris.
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    type: object
                    properties:
                      status:
                        type: string
                        example: /behov/03ARZ3SDFKTSV4RRFFQ69G5G23/status
  '/behov/{behovId}':
    get:
      operationId: getBehovById
      tags:
        - Behov
      summary: Se et helt behov
      parameters:
        - in: path
          name: behovId
          required: true
          description: Hvilket behov du vil se på
          schema:
            type: string
      responses:
        '200':
          description: Behovet er fiks og flott ferdig. Bør det inneholde data fra POSTen?
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Behov'
        '404':
          description: 'Behovet er ikke ferdig innfridd enda, og kan ikke vises.'
  '/behov/{behovId}/status':
    get:
      operationId: getBehovStatus
      tags:
        - Behov
      summary: Gir status på behov
      description: |
        Et endepunkt som kan polles regelmessig for å vite om et behov er komplett, eller om et subsett av reglene er komplett.

        Er behovet, eller et subsett av reglene, komplette så settes status til COMPLETE.

        Klienten må så loope gjennom alle subsumsjonene for å hente det den vil.
      parameters:
        - in: path
          name: behovId
          required: true
          description: Hvilket behov du vil vite status på
          schema:
            type: string
          example: 03ARZ3SDFKTSV4RRFFQ69G5G23
        - in: query
          name: regler
          description: Liste over regler som må være besvart med subsumsjoner.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Regel'
          example:
            - Minsteinntekt
            - Grunnlag
      responses:
        '200':
          description: Status på behovet (eller subsettet av reglene du ba om)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehovStatus'
              examples:
                behovPendingUtenSubsumsjoner:
                  $ref: '#/components/examples/behovPendingUtenSubsumsjoner'
                behovPendingMedEnSubsumsjon:
                  $ref: '#/components/examples/behovPendingMedEnSubsumsjon'
                behovCompleteMedAlleSubsumsjonene:
                  $ref: '#/components/examples/behovCompleteMedAlleSubsumsjonene'
  '/subsumsjon/{subsumsjonId}':
    get:
      operationId: getSubsumsjonById
      tags:
        - Subsumsjon
      summary: Se en subsumsjon
      parameters:
        - in: path
          name: subsumsjonId
          required: true
          description: Hvilken subsumsjon du vil se på
          schema:
            type: string
      responses:
        '200':
          description: Saul Goodman
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subsumsjon'
  '/subsumsjon/{subsumsjonId}/vedtakskobling':
    post:
      operationId: connectSubsumsjonToVedtak
      tags:
        - Subsumsjon
      summary: Koble en subsumsjon til et vedtak
      parameters:
        - in: path
          name: subsumsjonId
          required: true
          description: Hvilken subsumsjon du vil knytte
          schema:
            type: string
      requestBody:
        description: Hva vi allerede vet om brukerens behov
        content:
          application/json:
            schema:
              type: object
              properties:
                vedtakId:
                  $ref: '#/components/schemas/VedtaksId'
                utfall:
                  $ref: '#/components/schemas/VedtaksUtfall'
      responses:
        '201':
          description: En nylig opprettet kobling til vedtak. Det bør reflekteres på subsumsjonen også.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vedtakskobling'
components:
  schemas:
    Behov:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BehovId'
        subsumsjoner:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/SubsumsjonId'
              regel:
                $ref: '#/components/schemas/Regel'
              links:
                $ref: '#/components/schemas/SubsumsjonLink'
    BehovId:
      type: string
      example: 03ARZ3SDFKTSV4RRFFQ69G5G23
    BehovRequest:
      type: object
      required:
        - aktorId
        - vedtakId
        - beregningsdato
      properties:
        aktorId:
          type: string
          description: Identifikasjon av bruker
          example: 01019955667
        vedtakId:
          type: integer
          description: Identifikasjon av dagpengevedtak
          format: int32
          example: 1234
        beregningsdato:
          type: string
          description: Dato beregning skal utføres på bakgrunn av. Regelverk på aktuelt tidspunkt skal benyttes. Inntekter i henhold til gitt dato skal benyttes.
          example: '2019-01-11'
        harAvtjentVerneplikt:
          type: boolean
          default: false
          description: Om bruker har avtjent verneplikt minst 3 av de siste 12 måneder.
        oppfyllerKravTilFangstOgFisk:
          type: boolean
          default: false
          description: Om bruker oppfyller særvilkårene for fangst og fisk.
        bruktInntektsPeriode:
          type: object
          default: false
          description: Om bruker oppfyller særvilkårene for fangst og fisk.
        manueltGrunnlag:
          type: integer
          nullable: true
          description: 'Er grunnlaget allerede kjent, kan det manuelt overstyres ved å sette sum her'
        antallBarn:
          type: integer
          default: 0
          description: Antall barn bruker søker barnetillegg for
    BehovStatus:
      allOf:
        - $ref: '#/components/schemas/Behov'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/Status'
    HttpProblem:
      type: object
      required:
        - type
        - title
        - status
      properties:
        type:
          type: string
          example: 'about:blank'
          description: 'URI referanse [RFC3986] som identifiserer problemtypen. Standard verdi er "about:blank"'
        title:
          type: string
          example: En feil har oppstått ved beregningen
          description: 'Tittel, kort oppsummering av problemtypen.'
        status:
          type: integer
          example: 500
          description: 'HTTP status-kode [RFC7231] generert av tjenesten der feilen oppstod.'
        detail:
          type: string
          example: Beregningen feilet - inntektskomponenten svarte ikke
          description: Menneskelesbar beskrivelse spesifikt til dette problemet
        instance:
          type: string
          example: /inntekt/1234
          description: 'URI referanse [RFC3986] som identifiserer den spesifikke ressursen der problemet oppstod'
    Regel:
      type: string
      description: Identifikator for alle reglene våre
      enum:
        - Minsteinntekt
        - Grunnlag
        - Periode
        - Sats
    Status:
      type: string
      enum:
        - PENDING
        - COMPLETE
    Subsumsjon:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SubsumsjonId'
        regel:
          $ref: '#/components/schemas/Regel'
        data:
          oneOf:
            - $ref: '#/components/schemas/SubsumsjonMinsteinntekt'
            - $ref: '#/components/schemas/SubsumsjonPeriode'
            - $ref: '#/components/schemas/SubsumsjonGrunnlag'
            - $ref: '#/components/schemas/SubsumsjonSats'
          example:
            foo: bar
            bar: foo
        links:
          $ref: '#/components/schemas/SubsumsjonLink'
    SubsumsjonGrunnlag:
      type: object
      properties:
        foo:
          type: string
        bar:
          type: string
    SubsumsjonId:
      type: string
      description: Identifikator for en subsumsjon
      example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
    SubsumsjonLink:
      type: object
      properties:
        self:
          type: string
          example: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV
        behov:
          type: string
          example: /behov/01ARZ3NDEKTSV4RRFFQ69G5FAV
        vedtakskobling:
          type: string
          example: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV/vedtakskobling
    SubsumsjonMinsteinntekt:
      type: object
      properties:
        foo:
          type: string
          example: foo
        bar:
          type: string
    SubsumsjonPeriode:
      type: object
      properties:
        foo:
          type: string
        bar:
          type: string
    SubsumsjonSats:
      type: object
      properties:
        foo:
          type: string
        bar:
          type: string
    SubsumsjonStatus:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SubsumsjonId'
        regel:
          $ref: '#/components/schemas/Regel'
        links:
          type: object
          properties:
            self:
              type: string
              example: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV
    VedtaksId:
      type: string
      example: 1234
    Vedtakskobling:
      type: object
      properties:
        id:
          type: string
          example: some-ulid
        vedtaksId:
          $ref: '#/components/schemas/VedtaksId'
        utfall:
          type: string
          example: Innvilget
        opprettet:
          type: string
          example: '2004-02-12T15:19:21+00:00'
    VedtaksUtfall:
      type: string
      example: Innvilget
      enum:
        - Innvilget
        - Avslått
  examples:
    behovCompleteMedAlleSubsumsjonene:
      summary: 'Et behov som er ferdig, og har subsumsjoner for alle reglene'
      value:
        id: 03ARZ3SDFKTSV4RRFFQ69G5G23
        status: COMPLETE
        subsumsjoner:
          - regel: Minsteinntekt
            links:
              self: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV
              vedtakskobling: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV/vedtakskobling
          - regel: Grunnlag
            links:
              self: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV
              vedtakskobling: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV/vedtakskobling
          - regel: Periode
            links:
              self: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV
              vedtakskobling: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV/vedtakskobling
          - regel: Sats
            links:
              self: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV
              vedtakskobling: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV/vedtakskobling
    behovPendingMedEnSubsumsjon:
      summary: 'Et behov som er pending, og en subsumsjon'
      value:
        id: 03ARZ3SDFKTSV4RRFFQ69G5G23
        status: PENDING
        subsumsjoner:
          - regel: Minsteinntekt
            links:
              self: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV
              vedtakskobling: /subsumsjon/01ARZ3NDEKTSV4RRFFQ69G5FAV/vedtakskobling
    behovPendingUtenSubsumsjoner:
      summary: 'Et behov som er pending, og har ingen subsumsjoner enda'
      value:
        id: 03ARZ3SDFKTSV4RRFFQ69G5G23
        status: PENDING
        subsumsjoner: []
    behovRequestMedBarnOgInntekt:
      summary: Behov med 3 barn og alt i orden
      value:
        aktorId: 01019955667
        vedtakId: 1234
        beregningsdato: '2019-01-11'
        harAvtjentVerneplikt: false
        oppfyllerKravTilFangstOgFisk: false
        bruktInntektsPeriode: {}
        manueltGrunnlag: 0
        antallBarn: 3
    behovRequestMedVerneplikt:
      summary: Behov med avtjent verneplikt
      value:
        aktorId: 01019955667
        vedtakId: 1234
        beregningsdato: '2019-01-11'
        harAvtjentVerneplikt: true
        oppfyllerKravTilFangstOgFisk: false
        bruktInntektsPeriode: {}
        manueltGrunnlag: 0
        antallBarn: 0
    behovResponsMedBarnOgInntekt:
      summary: Behov med 3 barn og alt i orden
      value:
        id: 03ARZ3SDFKTSV4RRFFQ69G5G23
        links:
          self: /behov/03ARZ3SDFKTSV4RRFFQ69G5G23
        aktorId: 01019955667
        vedtakId: 1234
        beregningsdato: '2019-01-11'
        harAvtjentVerneplikt: false
        oppfyllerKravTilFangstOgFisk: false
        bruktInntektsPeriode: {}
        manueltGrunnlag: 0
        antallBarn: 3
    behovResponsMedVerneplikt:
      summary: Behov med avtjent verneplikt
      value:
        id: 03ARZ3SDFKTSV4RRFFQ69G5G23
        links:
          self: /behov/03ARZ3SDFKTSV4RRFFQ69G5G23
        aktorId: 01019955667
        vedtakId: 1234
        beregningsdato: '2019-01-11'
        harAvtjentVerneplikt: true
        oppfyllerKravTilFangstOgFisk: false
        bruktInntektsPeriode: {}
        manueltGrunnlag: 0
        antallBarn: 0
  headers:
    ExpiresAfter:
      description: date in UTC when token expires
      schema:
        type: string
        format: date-time
  securitySchemes:
    stsOIDC:
      type: openIdConnect
      openIdConnectUrl: 'https://security-token-service.nais.preprod.local/rest/v1/sts/.well-known/openid-configuration'
    stsTokenAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Lag OIDC tokens med STS:
        * Prod: <https://security-token-service.nais.adeo.no/>
        * Test: <https://security-token-service.nais.preprod.local/>

        Triks for å lage token i CLI: 

            DP_TOKEN=$(curl -v --user <SystemBRUKER>:<Passord> \
              https://security-token-service.nais.preprod.local/rest/v1/sts/token/\?grant_type\=client_credentials\&scope\=openid \
              | jq -r .access_token)
